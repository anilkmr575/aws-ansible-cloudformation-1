AWSTemplateFormatVersion: "2010-09-09"

Description: "Security Group"

Parameters:
  CidrIp:
    Type: String

  FromPort:
    Type: Number

  IpProtocol:
    Type: String

  SecurityGroupType:
    Type: String

  SecurityGroupStackName:
    Type: String

  ToPort:
    Type: Number

  VpcStackName:
    Type: String

Conditions:
  IsCidrIpSecurityGroupType:
    Fn::Equals:
      - Ref: SecurityGroupType
      - "cidr_ip"

  IsSourceSecurityGroupIdSecurityGroupType:
    Fn::Equals:
      - Ref: SecurityGroupType
      - "source_security_group_id"

Resources:
  SecurityGroupCidrIp:
    Type: AWS::EC2::SecurityGroup
    Condition: IsCidrIpSecurityGroupType
    Properties:
      GroupDescription: "Security Group"
      SecurityGroupIngress:
        - CidrIp: { Ref: CidrIp }
          FromPort: { Ref: FromPort }
          IpProtocol: { Ref: IpProtocol }
          ToPort: { Ref: ToPort }
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-vpc::id

  SecurityGroupSourceSecurityGroupId:
    Type: AWS::EC2::SecurityGroup
    Condition: IsSourceSecurityGroupIdSecurityGroupType
    Properties:
      GroupDescription: "Security Group"
      SecurityGroupIngress:
        - FromPort: { Ref: FromPort }
          IpProtocol: { Ref: IpProtocol }
          SourceSecurityGroupId:
            Fn::ImportValue:
              Fn::Sub: ${SecurityGroupStackName}-security::group::id
          ToPort: { Ref: ToPort }
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-vpc::id

Outputs:
  SecurityGroupIdCidrIp:
    Condition: IsCidrIpSecurityGroupType
    Description: "Security Group Id"
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-security::group::id
    Value: { Ref: SecurityGroupCidrIp }

  SecurityGroupIdSourceSecurityGroupId:
    Condition: IsSourceSecurityGroupIdSecurityGroupType
    Description: "Security Group Id"
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-security::group::id
    Value: { Ref: SecurityGroupSourceSecurityGroupId }
